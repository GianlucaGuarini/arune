{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://arune/./src/components/global/player/player.riot","webpack://arune/./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js","webpack://arune/./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js","webpack://arune/./src/style.css?e320","webpack://arune/./src/components/global/ sync [a-zA-Z0-9-]+\\.riot","webpack://arune/./src/register-global-components.js","webpack://arune/./node_modules/riot/esm/api/register.js","webpack://arune/./node_modules/riot/esm/api/mount.js","webpack://arune/./src/index.js","webpack://arune/./node_modules/riot/esm/core/mount-component.js","webpack://arune/./node_modules/riot/esm/api/__.js","webpack://arune/./node_modules/@riotjs/hot-reload/index.js","webpack://arune/./node_modules/riot/esm/api/component.js","webpack://arune/./node_modules/riot/esm/dependencies/cumpa/index.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/functions.js","webpack://arune/./node_modules/riot/esm/core/mocked-template-interface.js","webpack://arune/./node_modules/riot/esm/core/pure-component-api.js","webpack://arune/./node_modules/riot/esm/core/bind-dom-node-to-component-instance.js","webpack://arune/./node_modules/riot/esm/core/create-core-api-methods.js","webpack://arune/./node_modules/riot/esm/core/component-dom-selectors.js","webpack://arune/./node_modules/riot/esm/core/component-lifecycle-methods.js","webpack://arune/./node_modules/riot/esm/dependencies/curri/index.js","webpack://arune/./node_modules/riot/esm/core/compute-component-state.js","webpack://arune/./node_modules/riot/esm/core/compute-initial-props.js","webpack://arune/./node_modules/riot/esm/core/manage-component-lifecycle.js","webpack://arune/./node_modules/riot/esm/core/run-plugins.js","webpack://arune/./node_modules/riot/esm/core/create-attribute-bindings.js","webpack://arune/./node_modules/riot/esm/core/add-css-hook.js","webpack://arune/./node_modules/riot/esm/core/instantiate-component.js","webpack://arune/./node_modules/riot/esm/core/create-component-from-wrapper.js","webpack://arune/./node_modules/riot/esm/core/component-template-factory.js","webpack://arune/./node_modules/riot/esm/core/create-pure-component.js","webpack://arune/./node_modules/riot/esm/core/css-manager.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/dom-bindings/dist/dom-bindings.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/binding-types.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/checks.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/constants.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/dom.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/expression-types.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/misc.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/objects.js","webpack://arune/./node_modules/riot/esm/dependencies/@riotjs/util/strings.js","webpack://arune/./node_modules/riot/esm/dependencies/bianco.attr/index.next.js","webpack://arune/./node_modules/riot/esm/dependencies/bianco.dom-to-array/index.next.js","webpack://arune/./node_modules/riot/esm/dependencies/bianco.query/index.next.js","webpack://arune/./node_modules/riot/esm/utils/dom.js"],"sourcesContent":["<player>\n  <audio src=\"https://media.githubusercontent.com/media/GianlucaGuarini/arune/main/src/assets/audio/fx.mp3\" loop/>\n  <button class={state.isPlaying ? 'playing' : ''} onclick={toggleAudio} title={getButtonTitle()}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 48 48\" preserveAspectRatio=\"xMidYMid meet\">\n      <path if={!state.isPlaying} d=\"M16 37.85v-28l22 14Zm3-14Zm0 8.55 13.45-8.55L19 15.3Z\"/>\n      <path if={state.isPlaying} d=\"M28.25 38V10H36v28ZM12 38V10h7.75v28Z\"/>\n    </svg>\n  </button>\n\n  <script>\n    export default {\n      state: {\n        isPlaying: false\n      },\n      onMounted() {\n        this.player = this.$('audio')\n      },\n      onUpdated() {\n        if (this.state.isPlaying && !this.player.playing) {\n          this.player.play()\n        } else if (!this.player.playing) {\n          this.player.pause()\n        }\n      },\n      getButtonTitle() {\n        return this.state.isPlaying ? 'Stop this madness' : 'Give me some vibes'\n      },\n      toggleAudio() {\n        this.update({\n          isPlaying: !this.state.isPlaying\n        })\n      }\n    }\n  </script>\n\n  <style>\n    :host {\n      position: fixed;\n      bottom: 16px;\n      right: 16px;\n    }\n\n    button {\n      position: relative;\n      padding: 0;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background: transparent;\n      color: var(--text-color);\n      border: 2px solid var(--text-color);\n      width: 32px;\n      height: 32px;\n      border-radius: 100%;\n    }\n\n    button:hover, button:focus {\n      color: var(--active-color);\n      border-color: var(--active-color);\n    }\n\n    button::before, button::after {\n      content: '';\n      position: absolute;\n      top: -2px;\n      left: -2px;\n      visibility: hidden;\n      display: block;\n      width: 32px;\n      height: 32px;\n      border-radius: 100%;\n      z-index: -1;\n    }\n\n    button::before {\n      background: rgba(255, 255, 255, 0.4);\n    }\n\n    button::after {\n      background: rgba(255, 255, 255, 0.2);\n    }\n\n    button.playing::before, button.playing::after {\n      visibility: visible;\n    }\n\n    button.playing::before {\n      animation: buttonAnimation1 ease-in-out 300ms alternate infinite;\n    }\n\n    button.playing::after {\n      animation: buttonAnimation2 ease-in-out 500ms alternate infinite;\n    }\n\n    svg {\n      width: 28px;\n      height: 28px;\n      border-radius: 100%;\n      background: var(--background-color);\n    }\n\n    @keyframes buttonAnimation1 {\n      from {\n        transform: scale(1)\n      }\n      to {\n        transform: scale(1.2)\n      }\n    }\n\n    @keyframes buttonAnimation2 {\n      from {\n        transform: scale(1)\n      }\n      to {\n        transform: scale(1.3)\n      }\n    }\n  </style>\n</player>\n","\"use strict\";\n\n/* eslint-env browser */\n/*\n  eslint-disable\n  no-console,\n  func-names\n*/\n\n/** @typedef {any} TODO */\n\nvar normalizeUrl = require(\"./normalize-url\");\nvar srcByModuleId = Object.create(null);\nvar noDocument = typeof document === \"undefined\";\nvar forEach = Array.prototype.forEach;\n\n/**\n * @param {function} fn\n * @param {number} time\n * @returns {(function(): void)|*}\n */\nfunction debounce(fn, time) {\n  var timeout = 0;\n  return function () {\n    // @ts-ignore\n    var self = this;\n    // eslint-disable-next-line prefer-rest-params\n    var args = arguments;\n    var functionCall = function functionCall() {\n      return fn.apply(self, args);\n    };\n    clearTimeout(timeout);\n\n    // @ts-ignore\n    timeout = setTimeout(functionCall, time);\n  };\n}\nfunction noop() {}\n\n/**\n * @param {TODO} moduleId\n * @returns {TODO}\n */\nfunction getCurrentScriptUrl(moduleId) {\n  var src = srcByModuleId[moduleId];\n  if (!src) {\n    if (document.currentScript) {\n      src = /** @type {HTMLScriptElement} */document.currentScript.src;\n    } else {\n      var scripts = document.getElementsByTagName(\"script\");\n      var lastScriptTag = scripts[scripts.length - 1];\n      if (lastScriptTag) {\n        src = lastScriptTag.src;\n      }\n    }\n    srcByModuleId[moduleId] = src;\n  }\n\n  /**\n   * @param {string} fileMap\n   * @returns {null | string[]}\n   */\n  return function (fileMap) {\n    if (!src) {\n      return null;\n    }\n    var splitResult = src.split(/([^\\\\/]+)\\.js$/);\n    var filename = splitResult && splitResult[1];\n    if (!filename) {\n      return [src.replace(\".js\", \".css\")];\n    }\n    if (!fileMap) {\n      return [src.replace(\".js\", \".css\")];\n    }\n    return fileMap.split(\",\").map(function (mapRule) {\n      var reg = new RegExp(\"\".concat(filename, \"\\\\.js$\"), \"g\");\n      return normalizeUrl(src.replace(reg, \"\".concat(mapRule.replace(/{fileName}/g, filename), \".css\")));\n    });\n  };\n}\n\n/**\n * @param {TODO} el\n * @param {string} [url]\n */\nfunction updateCss(el, url) {\n  if (!url) {\n    if (!el.href) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    url = el.href.split(\"?\")[0];\n  }\n  if (!isUrlRequest( /** @type {string} */url)) {\n    return;\n  }\n  if (el.isLoaded === false) {\n    // We seem to be about to replace a css link that hasn't loaded yet.\n    // We're probably changing the same file more than once.\n    return;\n  }\n  if (!url || !(url.indexOf(\".css\") > -1)) {\n    return;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  el.visited = true;\n  var newEl = el.cloneNode();\n  newEl.isLoaded = false;\n  newEl.addEventListener(\"load\", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.addEventListener(\"error\", function () {\n    if (newEl.isLoaded) {\n      return;\n    }\n    newEl.isLoaded = true;\n    el.parentNode.removeChild(el);\n  });\n  newEl.href = \"\".concat(url, \"?\").concat(Date.now());\n  if (el.nextSibling) {\n    el.parentNode.insertBefore(newEl, el.nextSibling);\n  } else {\n    el.parentNode.appendChild(newEl);\n  }\n}\n\n/**\n * @param {string} href\n * @param {TODO} src\n * @returns {TODO}\n */\nfunction getReloadUrl(href, src) {\n  var ret;\n\n  // eslint-disable-next-line no-param-reassign\n  href = normalizeUrl(href);\n  src.some(\n  /**\n   * @param {string} url\n   */\n  // eslint-disable-next-line array-callback-return\n  function (url) {\n    if (href.indexOf(src) > -1) {\n      ret = url;\n    }\n  });\n  return ret;\n}\n\n/**\n * @param {string} [src]\n * @returns {boolean}\n */\nfunction reloadStyle(src) {\n  if (!src) {\n    return false;\n  }\n  var elements = document.querySelectorAll(\"link\");\n  var loaded = false;\n  forEach.call(elements, function (el) {\n    if (!el.href) {\n      return;\n    }\n    var url = getReloadUrl(el.href, src);\n    if (!isUrlRequest(url)) {\n      return;\n    }\n    if (el.visited === true) {\n      return;\n    }\n    if (url) {\n      updateCss(el, url);\n      loaded = true;\n    }\n  });\n  return loaded;\n}\nfunction reloadAll() {\n  var elements = document.querySelectorAll(\"link\");\n  forEach.call(elements, function (el) {\n    if (el.visited === true) {\n      return;\n    }\n    updateCss(el);\n  });\n}\n\n/**\n * @param {string} url\n * @returns {boolean}\n */\nfunction isUrlRequest(url) {\n  // An URL is not an request if\n\n  // It is not http or https\n  if (!/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(url)) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {TODO} moduleId\n * @param {TODO} options\n * @returns {TODO}\n */\nmodule.exports = function (moduleId, options) {\n  if (noDocument) {\n    console.log(\"no window.document found, will not HMR CSS\");\n    return noop;\n  }\n  var getScriptSrc = getCurrentScriptUrl(moduleId);\n  function update() {\n    var src = getScriptSrc(options.filename);\n    var reloaded = reloadStyle(src);\n    if (options.locals) {\n      console.log(\"[HMR] Detected local css modules. Reload all css\");\n      reloadAll();\n      return;\n    }\n    if (reloaded) {\n      console.log(\"[HMR] css reload %s\", src.join(\" \"));\n    } else {\n      console.log(\"[HMR] Reload all css\");\n      reloadAll();\n    }\n  }\n  return debounce(update, 50);\n};","\"use strict\";\n\n/* eslint-disable */\n\n/**\n * @param {string[]} pathComponents\n * @returns {string}\n */\nfunction normalizeUrl(pathComponents) {\n  return pathComponents.reduce(function (accumulator, item) {\n    switch (item) {\n      case \"..\":\n        accumulator.pop();\n        break;\n      case \".\":\n        break;\n      default:\n        accumulator.push(item);\n    }\n    return accumulator;\n  }, /** @type {string[]} */[]).join(\"/\");\n}\n\n/**\n * @param {string} urlString\n * @returns {string}\n */\nmodule.exports = function (urlString) {\n  urlString = urlString.trim();\n  if (/^data:/i.test(urlString)) {\n    return urlString;\n  }\n  var protocol = urlString.indexOf(\"//\") !== -1 ? urlString.split(\"//\")[0] + \"//\" : \"\";\n  var components = urlString.replace(new RegExp(protocol, \"i\"), \"\").split(\"/\");\n  var host = components[0].toLowerCase().replace(/\\.$/, \"\");\n  components[0] = \"\";\n  var path = normalizeUrl(components);\n  return protocol + host + path;\n};","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1727331902582\n      var cssReload = require(\"../node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","var map = {\n\t\"./player/player.riot\": 483\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 329;","import { register } from 'riot'\n\nconst basename = (path, extension = '') => path.split('/').reverse()[0].replace(extension, '')\nconst globalComponentsContext = require.context('./components/global/', true, /[a-zA-Z0-9-]+\\.riot/)\n\nexport default () => {\n  globalComponentsContext.keys().map(path => {\n    const name = basename(path, '.riot')\n\n    const component = globalComponentsContext(path)\n\n    register(name, component.default || component)\n\n    return {\n      name,\n      component\n    }\n  })\n}\n","/* Riot v9.1.1, @license MIT */\nimport { COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { createComponentFromWrapper } from '../core/create-component-from-wrapper.js';\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\nfunction register(name, { css, template, exports }) {\n  if (COMPONENTS_IMPLEMENTATION_MAP.has(name))\n    panic(`The component \"${name}\" was already registered`);\n\n  COMPONENTS_IMPLEMENTATION_MAP.set(\n    name,\n    createComponentFromWrapper({ name, css, template, exports }),\n  );\n\n  return COMPONENTS_IMPLEMENTATION_MAP\n}\n\nexport { register };\n","/* Riot v9.1.1, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\nimport { mountComponent } from '../core/mount-component.js';\n\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of riot components\n */\nfunction mount(selector, initialProps, name) {\n  return $(selector).map((element) =>\n    mountComponent(element, initialProps, name),\n  )\n}\n\nexport { mount };\n","import './style.css'\nimport '@riotjs/hot-reload'\nimport { mount } from 'riot'\nimport registerGlobalComponents from './register-global-components'\n\n// register\nregisterGlobalComponents()\n\n// mount all the global components found in this page\nmount('[data-riot-component]')\n","/* Riot v9.1.1, @license MIT */\nimport { COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { getName } from '../utils/dom.js';\n\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @param   {Array} slots - component slots\n * @returns {Object} a new component instance bound to a DOM node\n */\nfunction mountComponent(element, initialProps, componentName, slots) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name))\n    panic(`The component named \"${name}\" was never registered`);\n\n  const component = COMPONENTS_IMPLEMENTATION_MAP.get(name)({\n    props: initialProps,\n    slots,\n  });\n\n  return component.mount(element)\n}\n\nexport { mountComponent };\n","/* Riot v9.1.1, @license MIT */\nimport bindingTypes from '../dependencies/@riotjs/util/binding-types.js';\nimport { DOM_COMPONENT_INSTANCE_PROPERTY, PARENT_KEY_SYMBOL } from '../dependencies/@riotjs/util/constants.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport { template as create, createBinding as create$1, createExpression as create$4 } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport cssManager from '../core/css-manager.js';\n\n// expose some internal stuff that might be used from external tools\nconst __ = {\n  cssManager,\n  DOMBindings: {\n    template: create,\n    createBinding: create$1,\n    createExpression: create$4,\n    bindingTypes,\n    expressionTypes,\n  },\n  globals: {\n    DOM_COMPONENT_INSTANCE_PROPERTY,\n    PARENT_KEY_SYMBOL,\n  },\n};\n\nexport { __ };\n","import { __, component } from 'riot';\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (scope || document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nconst { cssManager } = __;\nconst { DOM_COMPONENT_INSTANCE_PROPERTY } = __.globals;\n\nfunction reload(componentAPI) {\n  const { name } = componentAPI;\n\n  if (!name) {\n    console.warn('Anonymous components can not be reloaded'); // eslint-disable-line\n    return []\n  }\n\n  return $(`${name}, [is=${name}]`).map((el) => {\n    const oldTag = el[DOM_COMPONENT_INSTANCE_PROPERTY];\n\n    // early return in case there is no riot instance found\n    if (!oldTag) return\n\n    // remove the tag template from the DOM\n    oldTag.unmount(true);\n    // delete the old css from the css manager\n    cssManager.remove(name);\n\n    // create the new tag\n    const newTag = component(componentAPI)(el, oldTag.props);\n    newTag.update(oldTag.state);\n\n    return newTag\n  })\n}\n\nexport { reload as default };\n","/* Riot v9.1.1, @license MIT */\nimport compose from '../dependencies/cumpa/index.js';\nimport { createComponentFromWrapper } from '../core/create-component-from-wrapper.js';\n\n/**\n * Helper method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\nfunction component(implementation) {\n  return (el, props, { slots, attributes, parentScope } = {}) =>\n    compose(\n      (c) => c.mount(el, parentScope),\n      (c) => c({ props, slots, attributes }),\n      createComponentFromWrapper,\n    )(implementation)\n}\n\nexport { component };\n","/* Riot WIP, @license MIT */\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\nfunction compose(...fns) {\n  return fns.reduce((f, g) => (...args) => f(g(...args)))\n}\n\nexport { compose as default };\n","/* Riot WIP, @license MIT */\nimport { isFunction } from './checks.js';\n\n// does simply nothing\nfunction noop() {\n  return this\n}\n\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\nfunction autobindMethods(source, methods) {\n  methods.forEach((method) => {\n    source[method] = source[method].bind(source);\n  });\n\n  return source\n}\n\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\nfunction callOrAssign(source) {\n  return isFunction(source)\n    ? source.prototype && source.prototype.constructor\n      ? new source()\n      : source()\n    : source\n}\n\nexport { autobindMethods, callOrAssign, noop };\n","/* Riot v9.1.1, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { removeChild, cleanNode } from '../dependencies/@riotjs/util/dom.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\n// Components without template use a mocked template interface with some basic functionalities to\n// guarantee consistent rendering behaviour see https://github.com/riot/riot/issues/2984\nconst MOCKED_TEMPLATE_INTERFACE = {\n  [MOUNT_METHOD_KEY](el) {\n    this.el = el;\n  },\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY](_, __, mustRemoveRoot = false) {\n    if (mustRemoveRoot) removeChild(this.el);\n    else if (!mustRemoveRoot) cleanNode(this.el);\n  },\n  clone: noop,\n  createDOM: noop,\n};\n\nexport { MOCKED_TEMPLATE_INTERFACE };\n","/* Riot v9.1.1, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop,\n});\n\nexport { PURE_COMPONENT_API };\n","/* Riot v9.1.1, @license MIT */\nimport { DOM_COMPONENT_INSTANCE_PROPERTY } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\nconst bindDOMNodeToComponentInstance = (node, component) =>\n  (node[DOM_COMPONENT_INSTANCE_PROPERTY] = component);\n\nexport { bindDOMNodeToComponentInstance };\n","/* Riot v9.1.1, @license MIT */\nimport { MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce(\n    (acc, method) => {\n      acc[method] = mapFunction(method);\n\n      return acc\n    },\n    {},\n  )\n}\n\nexport { createCoreAPIMethods };\n","/* Riot v9.1.1, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\n\nconst COMPONENT_DOM_SELECTORS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0]\n  },\n  $$(selector) {\n    return $(selector, this.root)\n  },\n});\n\nexport { COMPONENT_DOM_SELECTORS };\n","/* Riot v9.1.1, @license MIT */\nimport { SHOULD_UPDATE_KEY, ON_BEFORE_MOUNT_KEY, ON_MOUNTED_KEY, ON_BEFORE_UPDATE_KEY, ON_UPDATED_KEY, ON_BEFORE_UNMOUNT_KEY, ON_UNMOUNTED_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { noop } from '../dependencies/@riotjs/util/functions.js';\n\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop,\n});\n\nexport { COMPONENT_LIFECYCLE_METHODS };\n","/* Riot WIP, @license MIT */\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn, ...acc) {\n  return (...args) => {\n    args = [...acc, ...args];\n\n    return args.length < fn.length ?\n      curry(fn, ...args) :\n      fn(...args)\n  }\n}\n\nexport { curry as default };\n","/* Riot v9.1.1, @license MIT */\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\n\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state given to the `update` call\n * @returns {Object} new object state\n */\nfunction computeComponentState(oldState, newState) {\n  return {\n    ...oldState,\n    ...callOrAssign(newState),\n  }\n}\n\nexport { computeComponentState };\n","/* Riot v9.1.1, @license MIT */\nimport { DOMattributesToObject } from '../dependencies/@riotjs/util/dom.js';\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\n\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\nfunction computeInitialProps(element, initialProps = {}) {\n  return {\n    ...DOMattributesToObject(element),\n    ...callOrAssign(initialProps),\n  }\n}\n\nexport { computeInitialProps };\n","/* Riot v9.1.1, @license MIT */\nimport { isFunction, isObject } from '../dependencies/@riotjs/util/checks.js';\nimport { IS_PURE_SYMBOL, PARENT_KEY_SYMBOL, ATTRIBUTES_KEY_SYMBOL, PROPS_KEY, STATE_KEY, TEMPLATE_KEY_SYMBOL, ROOT_KEY, SLOTS_KEY, ON_BEFORE_MOUNT_KEY, ON_MOUNTED_KEY, SHOULD_UPDATE_KEY, ON_BEFORE_UPDATE_KEY, IS_COMPONENT_UPDATING, ON_UPDATED_KEY, ON_BEFORE_UNMOUNT_KEY, ON_UNMOUNTED_KEY, IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { DOMattributesToObject } from '../dependencies/@riotjs/util/dom.js';\nimport { autobindMethods } from '../dependencies/@riotjs/util/functions.js';\nimport { evaluateAttributeExpressions } from '../dependencies/@riotjs/util/misc.js';\nimport { defineProperties, defineProperty } from '../dependencies/@riotjs/util/objects.js';\nimport { addCssHook } from './add-css-hook.js';\nimport { bindDOMNodeToComponentInstance } from './bind-dom-node-to-component-instance.js';\nimport { computeComponentState } from './compute-component-state.js';\nimport { computeInitialProps } from './compute-initial-props.js';\nimport { createAttributeBindings } from './create-attribute-bindings.js';\nimport { runPlugins } from './run-plugins.js';\n\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\nfunction manageComponentLifecycle(\n  component,\n  { slots, attributes, props },\n) {\n  return autobindMethods(\n    runPlugins(\n      defineProperties(\n        isObject(component) ? Object.create(component) : component,\n        {\n          mount(element, state = {}, parentScope) {\n            // any element mounted passing through this function can't be a pure component\n            defineProperty(element, IS_PURE_SYMBOL, false);\n            this[PARENT_KEY_SYMBOL] = parentScope;\n            this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(\n              element,\n              attributes,\n            ).mount(parentScope);\n\n            defineProperty(\n              this,\n              PROPS_KEY,\n              Object.freeze({\n                ...computeInitialProps(element, props),\n                ...evaluateAttributeExpressions(\n                  this[ATTRIBUTES_KEY_SYMBOL].expressions,\n                ),\n              }),\n            );\n\n            this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n            this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone();\n\n            // link this object to the DOM node\n            bindDOMNodeToComponentInstance(element, this);\n            // add eventually the 'is' attribute\n            component.name && addCssHook(element, component.name);\n\n            // define the root element\n            defineProperty(this, ROOT_KEY, element);\n            // define the slots array\n            defineProperty(this, SLOTS_KEY, slots);\n\n            // before mount lifecycle event\n            this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            // mount the template\n            this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n            this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            return this\n          },\n          update(state = {}, parentScope) {\n            if (parentScope) {\n              this[PARENT_KEY_SYMBOL] = parentScope;\n              this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n            }\n\n            // Avoid adding the riot \"is\" directives to the component props\n            // eslint-disable-next-line no-unused-vars\n            const { [IS_DIRECTIVE]: _, ...newProps } = {\n              // make sure that the root node attributes will be always parsed\n              ...DOMattributesToObject(this[ROOT_KEY]),\n              ...evaluateAttributeExpressions(\n                this[ATTRIBUTES_KEY_SYMBOL].expressions,\n              ),\n            };\n\n            if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false)\n              return\n\n            defineProperty(\n              this,\n              PROPS_KEY,\n              Object.freeze({\n                // only root components will merge their initial props with the new ones\n                // children components will just get them overridden see also https://github.com/riot/riot/issues/2978\n                ...(parentScope ? null : this[PROPS_KEY]),\n                ...newProps,\n              }),\n            );\n\n            this[STATE_KEY] = computeComponentState(this[STATE_KEY], state);\n\n            this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            // avoiding recursive updates\n            // see also https://github.com/riot/riot/issues/2895\n            if (!this[IS_COMPONENT_UPDATING]) {\n              this[IS_COMPONENT_UPDATING] = true;\n              this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n            }\n\n            this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            this[IS_COMPONENT_UPDATING] = false;\n\n            return this\n          },\n          unmount(preserveRoot) {\n            this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n            this[ATTRIBUTES_KEY_SYMBOL].unmount();\n            // if the preserveRoot is null the template html will be left untouched\n            // in that case the DOM cleanup will happen differently from a parent node\n            this[TEMPLATE_KEY_SYMBOL].unmount(\n              this,\n              this[PARENT_KEY_SYMBOL],\n              preserveRoot === null ? null : !preserveRoot,\n            );\n            this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n\n            return this\n          },\n        },\n      ),\n    ),\n    Object.keys(component).filter((prop) => isFunction(component[prop])),\n  )\n}\n\nexport { manageComponentLifecycle };\n","/* Riot v9.1.1, @license MIT */\nimport { PLUGINS_SET } from '../dependencies/@riotjs/util/constants.js';\n\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\nfunction runPlugins(component) {\n  return [...PLUGINS_SET].reduce((c, fn) => fn(c) || c, component)\n}\n\nexport { runPlugins };\n","/* Riot v9.1.1, @license MIT */\nimport { createCoreAPIMethods } from './create-core-api-methods.js';\nimport { createExpression as create$4 } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\n\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\nfunction createAttributeBindings(node, attributes = []) {\n  const expressions = attributes.map((a) => create$4(node, a));\n  const binding = {};\n\n  return Object.assign(binding, {\n    expressions,\n    ...createCoreAPIMethods((method) => (scope) => {\n      expressions.forEach((e) => e[method](scope));\n\n      return binding\n    }),\n  })\n}\n\nexport { createAttributeBindings };\n","/* Riot v9.1.1, @license MIT */\nimport { IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { getName } from '../utils/dom.js';\nimport { set } from '../dependencies/bianco.attr/index.next.js';\n\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n\nexport { addCssHook };\n","/* Riot v9.1.1, @license MIT */\nimport { SLOTS_KEY, ROOT_KEY, PROPS_KEY, STATE_KEY } from '../dependencies/@riotjs/util/constants.js';\nimport { defineProperties, defineDefaults } from '../dependencies/@riotjs/util/objects.js';\nimport { COMPONENT_DOM_SELECTORS } from './component-dom-selectors.js';\nimport { COMPONENT_LIFECYCLE_METHODS } from './component-lifecycle-methods.js';\nimport cssManager from './css-manager.js';\nimport curry from '../dependencies/curri/index.js';\nimport { manageComponentLifecycle } from './manage-component-lifecycle.js';\n\n/**\n * Component definition function\n * @param   {Object} implementation - the component implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\nfunction instantiateComponent({ css, template, componentAPI, name }) {\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n\n  return curry(manageComponentLifecycle)(\n    defineProperties(\n      // set the component defaults without overriding the original component API\n      defineDefaults(componentAPI, {\n        ...COMPONENT_LIFECYCLE_METHODS,\n        [PROPS_KEY]: {},\n        [STATE_KEY]: {},\n      }),\n      {\n        // defined during the component creation\n        [SLOTS_KEY]: null,\n        [ROOT_KEY]: null,\n        // these properties should not be overriden\n        ...COMPONENT_DOM_SELECTORS,\n        name,\n        css,\n        template,\n      },\n    ),\n  )\n}\n\nexport { instantiateComponent };\n","/* Riot v9.1.1, @license MIT */\nimport { IS_PURE_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP } from '../dependencies/@riotjs/util/constants.js';\nimport { camelToDashCase } from '../dependencies/@riotjs/util/strings.js';\nimport { callOrAssign } from '../dependencies/@riotjs/util/functions.js';\nimport { memoize } from '../dependencies/@riotjs/util/misc.js';\nimport { MOCKED_TEMPLATE_INTERFACE } from './mocked-template-interface.js';\nimport { componentTemplateFactory } from './component-template-factory.js';\nimport { createPureComponent } from './create-pure-component.js';\nimport { instantiateComponent } from './instantiate-component.js';\n\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\nfunction createChildrenComponentsObject(components = {}) {\n  return Object.entries(callOrAssign(components)).reduce(\n    (acc, [key, value]) => {\n      acc[camelToDashCase(key)] = createComponentFromWrapper(value);\n      return acc\n    },\n    {},\n  )\n}\n\n/**\n * Create the getter function to render the child components\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {Function} function returning the component factory function\n */\nconst createChildComponentGetter = (componentWrapper) => {\n  const childrenComponents = createChildrenComponentsObject(\n    componentWrapper.exports ? componentWrapper.exports.components : {},\n  );\n\n  return (name) => {\n    // improve support for recursive components\n    if (name === componentWrapper.name)\n      return memoizedCreateComponentFromWrapper(componentWrapper)\n    // return the registered components\n    return childrenComponents[name] || COMPONENTS_IMPLEMENTATION_MAP.get(name)\n  }\n};\n\n/**\n * Performance optimization for the recursive components\n * @param  {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {Object} component like interface\n */\nconst memoizedCreateComponentFromWrapper = memoize(createComponentFromWrapper);\n\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @param   {string} componentWrapper.css - component css\n * @param   {Function} componentWrapper.template - function that will return the dom-bindings template function\n * @param   {Object} componentWrapper.exports - component interface\n * @param   {string} componentWrapper.name - component name\n * @returns {Object} component like interface\n */\nfunction createComponentFromWrapper(componentWrapper) {\n  const { css, template, exports, name } = componentWrapper;\n  const templateFn = template\n    ? componentTemplateFactory(\n        template,\n        componentWrapper,\n        createChildComponentGetter(componentWrapper),\n      )\n    : MOCKED_TEMPLATE_INTERFACE;\n\n  return ({ slots, attributes, props }) => {\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL])\n      return createPureComponent(exports, {\n        slots,\n        attributes,\n        props,\n        css,\n        template,\n      })\n\n    const componentAPI = callOrAssign(exports) || {};\n\n    const component = instantiateComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name,\n    })({ slots, attributes, props });\n\n    // notice that for the components created via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope)\n      },\n      update(parentScope, state) {\n        return component.update(state, parentScope)\n      },\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot)\n      },\n    }\n  }\n}\n\nexport { createComponentFromWrapper };\n","/* Riot v9.1.1, @license MIT */\nimport { template as create } from '../dependencies/@riotjs/dom-bindings/dist/dom-bindings.js';\nimport expressionTypes from '../dependencies/@riotjs/util/expression-types.js';\nimport bindingTypes from '../dependencies/@riotjs/util/binding-types.js';\n\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @param   {Function} getChildComponent - getter function to return the children components\n * @returns {TemplateChunk} template chunk object\n */\nfunction componentTemplateFactory(\n  template,\n  componentWrapper,\n  getChildComponent,\n) {\n  return template(\n    create,\n    expressionTypes,\n    bindingTypes,\n    getChildComponent,\n  )\n}\n\nexport { componentTemplateFactory };\n","/* Riot v9.1.1, @license MIT */\nimport { MOUNT_METHOD_KEY, IS_PURE_SYMBOL } from '../dependencies/@riotjs/util/constants.js';\nimport { panic } from '../dependencies/@riotjs/util/misc.js';\nimport { defineDefaults, defineProperty } from '../dependencies/@riotjs/util/objects.js';\nimport { PURE_COMPONENT_API } from './pure-component-api.js';\nimport { bindDOMNodeToComponentInstance } from './bind-dom-node-to-component-instance.js';\nimport { createCoreAPIMethods } from './create-core-api-methods.js';\n\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\nfunction createPureComponent(\n  pureFactoryFunction,\n  { slots, attributes, props, css, template },\n) {\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n\n  const component = defineDefaults(\n    pureFactoryFunction({ slots, attributes, props }),\n    PURE_COMPONENT_API,\n  );\n\n  return createCoreAPIMethods((method) => (...args) => {\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [element] = args;\n      // mark this node as pure element\n      defineProperty(element, IS_PURE_SYMBOL, true);\n      bindDOMNodeToComponentInstance(element, component);\n    }\n\n    component[method](...args);\n\n    return component\n  })\n}\n\nexport { createPureComponent };\n","/* Riot v9.1.1, @license MIT */\nimport $ from '../dependencies/bianco.query/index.next.js';\nimport { set } from '../dependencies/bianco.attr/index.next.js';\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]';\n\n// memoized curried function\nconst getStyleNode = ((style) => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style\n\n    // create a new style element or use an existing one\n    // and cache it internally\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n\n    /* istanbul ignore next */\n    if (!style.parentNode) document.head.appendChild(style);\n\n    return style\n  }\n})();\n\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nconst cssManager = {\n  CSS_BY_NAME,\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this\n  },\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this\n  },\n};\n\nexport { CSS_BY_NAME, STYLE_NODE_SELECTOR, cssManager as default };\n","/* Riot WIP, @license MIT */\nimport { removeChild, cleanNode, clearChildren, insertBefore, moveChildren, replaceChild } from '../../util/dom.js';\nimport { IS_PURE_SYMBOL, PARENT_KEY_SYMBOL } from '../../util/constants.js';\nimport { SIMPLE, IF, EACH, TAG, SLOT } from '../../util/binding-types.js';\nexport { default as bindingTypes } from '../../util/binding-types.js';\nimport { TEXT, EVENT, ATTRIBUTE, VALUE } from '../../util/expression-types.js';\nexport { default as expressionTypes } from '../../util/expression-types.js';\nimport { defineProperty } from '../../util/objects.js';\nimport { isTemplate, isSvg, isBoolean, isObject, isFunction, isNil } from '../../util/checks.js';\nimport { panic, memoize, evaluateAttributeExpressions } from '../../util/misc.js';\n\nconst HEAD_SYMBOL = Symbol();\nconst TAIL_SYMBOL = Symbol();\n\n/**\n * Create the <template> fragments text nodes\n * @return {Object} {{head: Text, tail: Text}}\n */\nfunction createHeadTailPlaceholders() {\n  const head = document.createTextNode('');\n  const tail = document.createTextNode('');\n\n  head[HEAD_SYMBOL] = true;\n  tail[TAIL_SYMBOL] = true;\n\n  return { head, tail }\n}\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  const { head, tail } = createHeadTailPlaceholders();\n\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    head,\n    tail,\n    children: [head, ...Array.from(fragment.childNodes), tail],\n  }\n}\n\n/* c8 ignore start */\n/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n// fork of https://github.com/WebReflection/udomdiff version 1.1.0\n// due to https://github.com/WebReflection/udomdiff/pull/2\n/* eslint-disable */\n\n/**\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nconst udomdiff = (a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node =\n        bEnd < bLength\n          ? bStart\n            ? get(b[bStart - 1], -0).nextSibling\n            : get(b[bEnd - bStart], 0)\n          : before;\n      while (bStart < bEnd) insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart])) removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);\n      insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === index + sequence)\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > index - bStart) {\n            const node = get(a[aStart], 0);\n            while (bStart < index) insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b\n};\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\n\nconst EachBinding = {\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const { placeholder, nodes, childrenMap } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : [];\n\n    // prepare the diffing\n    const { newChildrenMap, batches, futureNodes } = createPatch(\n      items,\n      scope,\n      parentScope,\n      this,\n    );\n\n    // patch the DOM only if there are new nodes\n    udomdiff(\n      nodes,\n      futureNodes,\n      patch(Array.from(childrenMap.values()), parentScope),\n      placeholder,\n    );\n\n    // trigger the mounts and the updates\n    batches.forEach((fn) => fn());\n\n    // update the children map\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n\n    return this\n  },\n};\n\n/**\n * Patch the DOM while diffing\n * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      // get the last element added to the childrenMap saved previously\n      const element = redundant[redundant.length - 1];\n\n      if (element) {\n        // get the nodes and the template in stored in the last child of the childrenMap\n        const { template, nodes, context } = element;\n        // remove the last node (notice <template> tags might have more children nodes)\n        nodes.pop();\n\n        // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n        if (!nodes.length) {\n          // we have cleared all the children nodes and we can unmount this template\n          redundant.pop();\n          template.unmount(context, parentScope, null);\n        }\n      }\n    }\n\n    return item\n  }\n}\n\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\nfunction mustFilterItem(condition, context) {\n  return condition ? !condition(context) : false\n}\n\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {Object} options - options\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\nfunction extendScope(scope, { itemName, indexName, index, item }) {\n  defineProperty(scope, itemName, item);\n  if (indexName) defineProperty(scope, indexName, index);\n\n  return scope\n}\n\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag,\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item,\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n    const nodes = [];\n\n    if (mustFilterItem(condition, context)) {\n      return\n    }\n\n    const mustMount = !oldItem;\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = componentTemplate.el || root.cloneNode();\n    const meta =\n      isTemplateTag && mustMount\n        ? createTemplateMeta(componentTemplate)\n        : componentTemplate.meta;\n\n    if (mustMount) {\n      batches.push(() =>\n        componentTemplate.mount(el, context, parentScope, meta),\n      );\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    }\n\n    // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n    if (isTemplateTag) {\n      nodes.push(...meta.children);\n    } else {\n      nodes.push(el);\n    }\n\n    // delete the old item from the children map\n    childrenMap.delete(key);\n    futureNodes.push(...nodes);\n\n    // update the children map\n    newChildrenMap.set(key, {\n      nodes,\n      template: componentTemplate,\n      context,\n      index,\n    });\n  });\n\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes,\n  }\n}\n\nfunction create$6(\n  node,\n  { evaluate, condition, itemName, indexName, getKey, template },\n) {\n  const placeholder = document.createTextNode('');\n  const root = node.cloneNode();\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...EachBinding,\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder,\n  }\n}\n\n/**\n * Binding responsible for the `if` directive\n */\nconst IfBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n\n      insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break\n      case mustUnmount:\n        this.unmount(scope);\n        break\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n\n    return this\n  },\n};\n\nfunction create$5(node, { evaluate, template }) {\n  const placeholder = document.createTextNode('');\n\n  insertBefore(placeholder, node);\n  removeChild(node);\n\n  return {\n    ...IfBinding,\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node),\n  }\n}\n\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(\n  (name) => ElementProto.hasOwnProperty(name), // eslint-disable-line\n);\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach(([name, value]) =>\n    attributeExpression(node, { name }, value),\n  );\n}\n\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n\n  Object.keys(oldAttributes)\n    .filter((name) => !newKeys.includes(name))\n    .forEach((attribute) => node.removeAttribute(attribute));\n}\n\n/**\n * Check whether the attribute value can be rendered\n * @param {*} value - expression value\n * @returns {boolean} true if we can render this attribute value\n */\nfunction canRenderAttribute(value) {\n  return ['string', 'number', 'boolean'].includes(typeof value)\n}\n\n/**\n * Check whether the attribute should be removed\n * @param {*} value - expression value\n * @param   {boolean} isBoolean - flag to handle boolean attributes\n * @returns {boolean} boolean - true if the attribute can be removed}\n */\nfunction shouldRemoveAttribute(value, isBoolean) {\n  // boolean attributes should be removed if the value is falsy\n  if (isBoolean) return !value && value !== 0\n  // otherwise we can try to render it\n  return typeof value === 'undefined' || value === null\n}\n\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {boolean} expression.isBoolean - flag to handle boolean attributes\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\nfunction attributeExpression(\n  node,\n  { name, isBoolean: isBoolean$1 },\n  value,\n  oldValue,\n) {\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    }\n\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return\n  }\n\n  // store the attribute on the node to make it compatible with native custom elements\n  if (\n    !isNativeHtmlProperty(name) &&\n    (isBoolean(value) || isObject(value) || isFunction(value))\n  ) {\n    node[name] = value;\n  }\n\n  if (shouldRemoveAttribute(value, isBoolean$1)) {\n    node.removeAttribute(name);\n  } else if (canRenderAttribute(value)) {\n    node.setAttribute(name, normalizeValue(name, value, isBoolean$1));\n  }\n}\n\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @param   {boolean} isBoolean - boolean attributes flag\n * @returns {string} input value as string\n */\nfunction normalizeValue(name, value, isBoolean) {\n  // be sure that expressions like selected={ true } will always be rendered as selected='selected'\n  // fix https://github.com/riot/riot/issues/2975\n  return value === true && isBoolean ? name : value\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = (value) =>\n  Array.isArray(value) ? value : [value, false];\n\n// see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event);\n  },\n};\nconst ListenersWeakMap = new WeakMap();\n\nconst createListener = (node) => {\n  const listener = Object.create(EventListener);\n  ListenersWeakMap.set(node, listener);\n  return listener\n};\n\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\nfunction eventExpression(node, { name }, value) {\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n  const eventListener = ListenersWeakMap.get(node) || createListener(node);\n  const [callback, options] = getCallbackAndOptions(value);\n  const handler = eventListener[normalizedEventName];\n  const mustRemoveEvent = handler && !callback;\n  const mustAddEvent = callback && !handler;\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener);\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options);\n  }\n\n  eventListener[normalizedEventName] = callback;\n}\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value\n}\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {Text} the text node to update\n */\nconst getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex];\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('');\n    node.replaceChild(textNode, target);\n\n    return textNode\n  }\n\n  return target\n};\n\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n\n/**\n * This methods handles the input fields value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nconst expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression,\n};\n\nconst Expression = {\n  // Static props\n  // node: null,\n  // value: null,\n\n  // API methods\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope);\n\n    // IO() DOM updates\n    apply(this, this.value);\n\n    return this\n  },\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this\n  },\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n\n    return this\n  },\n};\n\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\nfunction apply(expression, value) {\n  return expressions[expression.type](\n    expression.node,\n    expression,\n    value,\n    expression.value,\n  )\n}\n\nfunction create$4(node, data) {\n  return {\n    ...Expression,\n    ...data,\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node,\n  }\n}\n\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return {\n      ...acc,\n      [method]: (scope) => {\n        return collection.map((item) => item[method](scope)) && context\n      },\n    }\n  }, {})\n}\n\nfunction create$3(node, { expressions }) {\n  return {\n    ...flattenCollectionMethods(\n      expressions.map((expression) => create$4(node, expression)),\n      ['mount', 'update', 'unmount'],\n    ),\n  }\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope\n\n  const expressions = attributes.map((attr) => ({\n    ...attr,\n    value: attr.evaluate(scope),\n  }));\n\n  return Object.assign(\n    Object.create(parentScope || null),\n    evaluateAttributeExpressions(expressions),\n  )\n}\n\n// this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\nconst getRealParent = (scope, parentScope) =>\n  scope[PARENT_KEY_SYMBOL] || parentScope;\n\nconst SlotBinding = {\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n  // template: null,\n\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope)\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots\n      ? scope.slots.find(({ id }) => id === this.name)\n      : false;\n    const { parentNode } = this.node;\n    const realParent = getRealParent(scope, parentScope);\n\n    this.template =\n      templateData &&\n      create(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      cleanNode(this.node);\n      this.template.mount(\n        this.node,\n        this.getTemplateScope(scope, realParent),\n        realParent,\n      );\n      this.template.children = Array.from(this.node.childNodes);\n    }\n\n    moveSlotInnerContent(this.node);\n    removeChild(this.node);\n\n    return this\n  },\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = getRealParent(scope, parentScope);\n      this.template.update(this.getTemplateScope(scope, realParent), realParent);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(\n        this.getTemplateScope(scope, parentScope),\n        null,\n        mustRemoveRoot,\n      );\n    }\n\n    return this\n  },\n};\n\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLElement} slot - slot node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\nfunction moveSlotInnerContent(slot) {\n  const child = slot && slot.firstChild;\n\n  if (!child) return\n\n  insertBefore(child, slot);\n  moveSlotInnerContent(slot);\n}\n\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} name - slot id\n * @param   {AttributeExpressionData[]} attributes - slot attributes\n * @returns {Object} Slot binding object\n */\nfunction createSlot(node, { name, attributes }) {\n  return {\n    ...SlotBinding,\n    attributes,\n    node,\n    name,\n  }\n}\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\nfunction getTag(component, slots = [], attributes = []) {\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({ slots, attributes })\n  }\n\n  // otherwise we return a template chunk\n  return create(slotsToMarkup(slots), [\n    ...slotBindings(slots),\n    {\n      // the attributes should be registered as binding\n      // if we fallback to a normal template chunk\n      expressions: attributes.map((attr) => {\n        return {\n          type: ATTRIBUTE,\n          ...attr,\n        }\n      }),\n    },\n  ])\n}\n\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\nfunction slotBindings(slots) {\n  return slots.reduce((acc, { bindings }) => acc.concat(bindings), [])\n}\n\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html\n  }, '')\n}\n\nconst TagBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n\n  mount(scope) {\n    return this.update(scope)\n  },\n  update(scope, parentScope) {\n    const name = this.evaluate(scope);\n\n    // simple update\n    if (name && name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true);\n\n      // mount the new tag\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this\n  },\n};\n\nfunction create$2(\n  node,\n  { evaluate, getComponent, slots, attributes },\n) {\n  return {\n    ...TagBinding,\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent,\n  }\n}\n\nconst bindings = {\n  [IF]: create$5,\n  [SIMPLE]: create$3,\n  [EACH]: create$6,\n  [TAG]: create$2,\n  [SLOT]: createSlot,\n};\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map((e) =>\n    e.type === TEXT\n      ? {\n          ...e,\n          childNodeIndex: e.childNodeIndex + textExpressionsOffset,\n        }\n      : e,\n  )\n}\n\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {TagBindingData} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\nfunction create$1(root, binding, templateTagOffset) {\n  const { selector, type, redundantAttribute, expressions } = binding;\n  // find the node to apply the bindings\n  const node = selector ? root.querySelector(selector) : root;\n\n  // remove eventually additional attributes created only to select this node\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || [];\n\n  // init the binding\n  return (bindings[type] || bindings[SIMPLE])(node, {\n    ...binding,\n    expressions:\n      templateTagOffset && !selector\n        ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset)\n        : bindingExpressions,\n  })\n}\n\n// in this case a simple innerHTML is enough\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content\n}\n\n// for svg nodes we need a bit more work\n/* c8 ignore start */\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(\n    new window.DOMParser().parseFromString(\n      `<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`,\n      'application/xml',\n    ).documentElement,\n    true,\n  );\n\n  return svgNode\n}\n/* c8 ignore end */\n\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\nfunction createDOMTree(root, html) {\n  /* c8 ignore next */\n  if (isSvg(root)) return createSVGTree(html, root)\n\n  return createHTMLTree(html, root)\n}\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break\n    default:\n      el.appendChild(dom);\n  }\n}\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n * @returns {?DocumentFragment} fragment that will be injected into the root node\n */\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html)\n}\n\n/**\n * Get the offset of the <template> tag\n * @param {HTMLElement} parentNode - template tag parent node\n * @param {HTMLElement} el - the template tag we want to render\n * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n */\nfunction getTemplateTagOffset(parentNode, el, meta) {\n  const siblings = Array.from(parentNode.childNodes);\n\n  return Math.max(siblings.indexOf(el), siblings.indexOf(meta.head) + 1, 0)\n}\n\n/**\n * Template Chunk model\n * @type {Object}\n */\nconst TemplateChunk = {\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom =\n      this.dom ||\n      createTemplateDOM(el, this.html) ||\n      document.createDocumentFragment();\n\n    return this\n  },\n\n  // API methods\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta = {}) {\n    if (!el) panic('Please provide DOM node to mount properly your template');\n\n    if (this.el) this.unmount(scope);\n\n    // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n    const { fragment, children, avoidDOMInjection } = meta;\n    // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n    const { parentNode } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag\n      ? getTemplateTagOffset(parentNode, el, meta)\n      : null;\n\n    // create the DOM if it wasn't created before\n    this.createDOM(el);\n\n    // create the DOM of this template cloning the original DOM structure stored in this instance\n    // notice that if a documentFragment was passed (via meta) we will use it instead\n    const cloneNode = fragment || this.dom.cloneNode(true);\n\n    // store root node\n    // notice that for template tags the root note will be the parent tag\n    this.el = isTemplateTag ? parentNode : el;\n\n    // create the children array only for the <template> fragments\n    this.children = isTemplateTag\n      ? children || Array.from(cloneNode.childNodes)\n      : null;\n\n    // inject the DOM into the el only if a fragment is available\n    if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode);\n\n    // create the bindings\n    this.bindings = this.bindingsData.map((binding) =>\n      create$1(this.el, binding, templateTagOffset),\n    );\n    this.bindings.forEach((b) => b.mount(scope, parentScope));\n\n    // store the template meta properties\n    this.meta = meta;\n\n    return this\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach((b) => b.update(scope, parentScope));\n\n    return this\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot = false) {\n    const el = this.el;\n\n    if (!el) {\n      return this\n    }\n\n    this.bindings.forEach((b) => b.unmount(scope, parentScope, mustRemoveRoot));\n\n    switch (true) {\n      // pure components should handle the DOM unmount updates by themselves\n      // for mustRemoveRoot === null don't touch the DOM\n      case el[IS_PURE_SYMBOL] || mustRemoveRoot === null:\n        break\n\n      // if children are declared, clear them\n      // applicable for <template> and <slot/> bindings\n      case Array.isArray(this.children):\n        clearChildren(this.children);\n        break\n\n      // clean the node children only\n      case !mustRemoveRoot:\n        cleanNode(el);\n        break\n\n      // remove the root node only if the mustRemoveRoot is truly\n      case !!mustRemoveRoot:\n        removeChild(el);\n        break\n    }\n\n    this.el = null;\n\n    return this\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return {\n      ...this,\n      meta: {},\n      el: null,\n    }\n  },\n};\n\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {BindingData[]} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\nfunction create(html, bindings = []) {\n  return {\n    ...TemplateChunk,\n    html,\n    bindingsData: bindings,\n  }\n}\n\nexport { create$1 as createBinding, create$4 as createExpression, create as template };\n","/* Riot WIP, @license MIT */\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\n\nconst bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT,\n};\n\nexport { EACH, IF, SIMPLE, SLOT, TAG, bindingTypes as default };\n","/* Riot WIP, @license MIT */\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type\n}\n\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n\n  return !!owner || owner === null\n}\n\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\nfunction isTemplate(el) {\n  return el.tagName.toLowerCase() === 'template'\n}\n\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\nfunction isFunction(value) {\n  return checkType(value, 'function')\n}\n\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\nfunction isBoolean(value) {\n  return checkType(value, 'boolean')\n}\n\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\nfunction isObject(value) {\n  return !isNil(value) && value.constructor === Object\n}\n\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\nfunction isNil(value) {\n  return value === null || value === undefined\n}\n\n/**\n * Detect node js environment\n * @returns {boolean} true if the runtime is node\n */\nfunction isNode() {\n  return typeof process !== 'undefined'\n}\n\nexport { checkType, isBoolean, isFunction, isNil, isNode, isObject, isSvg, isTemplate };\n","/* Riot WIP, @license MIT */\n// Riot.js constants that can be used across more modules\n\nconst COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n  DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n  PLUGINS_SET = new Set(),\n  IS_DIRECTIVE = 'is',\n  MOUNT_METHOD_KEY = 'mount',\n  UPDATE_METHOD_KEY = 'update',\n  UNMOUNT_METHOD_KEY = 'unmount',\n  SHOULD_UPDATE_KEY = 'shouldUpdate',\n  ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n  ON_MOUNTED_KEY = 'onMounted',\n  ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n  ON_UPDATED_KEY = 'onUpdated',\n  ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n  ON_UNMOUNTED_KEY = 'onUnmounted',\n  PROPS_KEY = 'props',\n  STATE_KEY = 'state',\n  SLOTS_KEY = 'slots',\n  ROOT_KEY = 'root',\n  IS_PURE_SYMBOL = Symbol('pure'),\n  IS_COMPONENT_UPDATING = Symbol('is_updating'),\n  PARENT_KEY_SYMBOL = Symbol('parent'),\n  ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n  TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nexport { ATTRIBUTES_KEY_SYMBOL, COMPONENTS_IMPLEMENTATION_MAP, DOM_COMPONENT_INSTANCE_PROPERTY, IS_COMPONENT_UPDATING, IS_DIRECTIVE, IS_PURE_SYMBOL, MOUNT_METHOD_KEY, ON_BEFORE_MOUNT_KEY, ON_BEFORE_UNMOUNT_KEY, ON_BEFORE_UPDATE_KEY, ON_MOUNTED_KEY, ON_UNMOUNTED_KEY, ON_UPDATED_KEY, PARENT_KEY_SYMBOL, PLUGINS_SET, PROPS_KEY, ROOT_KEY, SHOULD_UPDATE_KEY, SLOTS_KEY, STATE_KEY, TEMPLATE_KEY_SYMBOL, UNMOUNT_METHOD_KEY, UPDATE_METHOD_KEY };\n","/* Riot WIP, @license MIT */\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value;\n    return acc\n  }, {})\n}\n\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n\n// Ignore this helper because it's needed only for svg tags\nfunction moveChildren(source, target) {\n  // eslint-disable-next-line fp/no-loops\n  while (source.firstChild) target.appendChild(source.firstChild);\n}\n\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\nfunction cleanNode(node) {\n  // eslint-disable-next-line fp/no-loops\n  while (node.firstChild) node.removeChild(node.firstChild);\n}\n\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\nfunction clearChildren(children) {\n  // eslint-disable-next-line fp/no-loops,fp/no-let\n  for (let i = 0; i < children.length; i++) removeChild(children[i]);\n}\n\n/**\n * Remove a node\n * @param {HTMLElement}node - node to remove\n * @returns {undefined}\n */\nconst removeChild = (node) => node.remove();\n\n/**\n * Insert before a node\n * @param {HTMLElement} newNode - node to insert\n * @param {HTMLElement} refNode - ref child\n * @returns {undefined}\n */\nconst insertBefore = (newNode, refNode) =>\n  refNode &&\n  refNode.parentNode &&\n  refNode.parentNode.insertBefore(newNode, refNode);\n\n/**\n * Replace a node\n * @param {HTMLElement} newNode - new node to add to the DOM\n * @param {HTMLElement} replaced - node to replace\n * @returns {undefined}\n */\nconst replaceChild = (newNode, replaced) =>\n  replaced &&\n  replaced.parentNode &&\n  replaced.parentNode.replaceChild(newNode, replaced);\n\nexport { DOMattributesToObject, cleanNode, clearChildren, insertBefore, moveChildren, removeChild, replaceChild };\n","/* Riot WIP, @license MIT */\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\n\nconst expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE,\n};\n\nexport { ATTRIBUTE, EVENT, TEXT, VALUE, expressionTypes as default };\n","/* Riot WIP, @license MIT */\nimport { VALUE, ATTRIBUTE } from './expression-types.js';\nimport { dashToCamelCase } from './strings.js';\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @param   { string } cause - optional error cause object\n * @returns { undefined } hoppla... at this point the program should stop working\n */\nfunction panic(message, cause) {\n  throw new Error(message, { cause })\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\nfunction memoize(fn) {\n  const cache = new Map();\n  const cached = (val) => {\n    return cache.has(val)\n      ? cache.get(val)\n      : cache.set(val, fn.call(this, val)) && cache.get(val)\n  };\n  cached.cache = cache;\n  return cached\n}\n\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const { value, type } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return {\n          ...acc,\n          ...value,\n        }\n      // value attribute\n      case type === VALUE:\n        acc.value = attribute.value;\n        break\n      // normal attributes\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc\n  }, {})\n}\n\nexport { evaluateAttributeExpressions, memoize, panic };\n","/* Riot WIP, @license MIT */\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options = {}) {\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, {\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true,\n    ...options,\n  });\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source\n}\n\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the property overriding the default options\n * @returns {Object} the original object modified\n */\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach(([key, value]) => {\n    defineProperty(source, key, value, options);\n  });\n\n  return source\n}\n\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach(([key, value]) => {\n    if (!source[key]) source[key] = value;\n  });\n\n  return source\n}\n\nexport { defineDefaults, defineProperties, defineProperty };\n","/* Riot WIP, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n}\n\nexport { camelToDashCase, dashToCamelCase };\n","/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\nconst normalize = values => values.length === 1 ? values[0] : values;\n\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)))\n  }))\n}\n\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : { [name]: value };\n  const props = Object.keys(attrs);\n\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els\n}\n\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute')\n}\n\nexport { get, set };\n","/* Riot WIP, @license MIT */\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (\n      /^\\[object (HTMLCollection|NodeList|Object)\\]$/\n        .test(Object.prototype.toString.call(els))\n        && typeof els.length === 'number'\n    )\n      return Array.from(els)\n    else\n      // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els]\n  }\n  // this object could be looped out of the box\n  return els\n}\n\nexport { domToArray as default };\n","/* Riot WIP, @license MIT */\nimport domToArray from '../bianco.dom-to-array/index.next.js';\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        scope      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\nfunction $(selector, scope) {\n  return domToArray(typeof selector === 'string' ?\n    (scope || document).querySelectorAll(selector) :\n    selector\n  )\n}\n\nexport { $ as default };\n","/* Riot v9.1.1, @license MIT */\nimport { IS_DIRECTIVE } from '../dependencies/@riotjs/util/constants.js';\nimport { get } from '../dependencies/bianco.attr/index.next.js';\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase()\n}\n\nexport { getName };\n"],"names":["state","isPlaying","onMounted","this","player","$","onUpdated","playing","play","pause","getButtonTitle","toggleAudio","update","normalizeUrl","srcByModuleId","Object","create","noDocument","document","forEach","Array","prototype","noop","updateCss","el","url","href","split","isUrlRequest","isLoaded","indexOf","visited","newEl","cloneNode","addEventListener","parentNode","removeChild","concat","Date","now","nextSibling","insertBefore","appendChild","reloadAll","elements","querySelectorAll","call","test","module","exports","moduleId","options","console","log","fn","timeout","getScriptSrc","src","currentScript","scripts","getElementsByTagName","lastScriptTag","length","fileMap","splitResult","filename","map","mapRule","reg","RegExp","replace","getCurrentScriptUrl","reloaded","loaded","ret","some","getReloadUrl","reloadStyle","locals","join","self","args","arguments","clearTimeout","setTimeout","apply","urlString","trim","protocol","components","host","toLowerCase","reduce","accumulator","item","pop","push","cssReload","id","hot","dispose","accept","undefined","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","globalComponentsContext","path","name","extension","reverse","basename","component","css","template","has","set","register","default","element","initialProps","componentName","slots","get","props","mountComponent","mount","__","cssManager","DOMBindings","createBinding","createExpression","bindingTypes","expressionTypes","globals","DOM_COMPONENT_INSTANCE_PROPERTY","PARENT_KEY_SYMBOL","reload","componentAPI","selector","els","scope","isArray","toString","from","oldTag","unmount","remove","newTag","implementation","attributes","parentScope","fns","f","g","compose","c","warn","callOrAssign","source","constructor","MOCKED_TEMPLATE_INTERFACE","_","mustRemoveRoot","clone","createDOM","PURE_COMPONENT_API","freeze","bindDOMNodeToComponentInstance","node","createCoreAPIMethods","mapFunction","acc","method","COMPONENT_DOM_SELECTORS","root","$$","COMPONENT_LIFECYCLE_METHODS","curry","computeComponentState","oldState","newState","computeInitialProps","manageComponentLifecycle","runPlugins","expressions","a","binding","assign","createAttributeBindings","addCssHook","newProps","preserveRoot","filter","prop","bind","instantiateComponent","add","createChildComponentGetter","componentWrapper","childrenComponents","entries","key","value","createComponentFromWrapper","createChildrenComponentsObject","memoizedCreateComponentFromWrapper","templateFn","getChildComponent","componentTemplateFactory","pureFactoryFunction","createPureComponent","CSS_BY_NAME","Map","style","inject","createElement","head","innerHTML","values","delete","HEAD_SYMBOL","Symbol","TAIL_SYMBOL","UNMOUNT_SCOPE","EachBinding","nodes","placeholder","childrenMap","collection","evaluate","items","newChildrenMap","batches","futureNodes","condition","itemName","getKey","indexName","isTemplateTag","index","context","extendScope","oldItem","mustFilterItem","mustMount","componentTemplate","meta","fragment","dom","tail","createTextNode","createHeadTailPlaceholders","avoidDOMInjection","children","childNodes","createTemplateMeta","createPatch","b","before","bLength","aEnd","bEnd","aStart","bStart","i","sequence","udomdiff","redundant","info","patch","IfBinding","mustUnmount","pristine","ElementProto","Element","isNativeHtmlProperty","hasOwnProperty","RE_EVENTS_PREFIX","EventListener","handleEvent","event","type","ListenersWeakMap","WeakMap","normalizeStringValue","getTextNode","childNodeIndex","target","nodeType","Node","COMMENT_NODE","textNode","replaceChild","attributeExpression","isBoolean","isBoolean$1","oldValue","newAttributes","oldAttributes","newKeys","includes","attribute","removeAttribute","removeAllAttributes","setAllAttributes","shouldRemoveAttribute","canRenderAttribute","setAttribute","normalizeValue","normalizedEventName","eventListener","listener","createListener","callback","getCallbackAndOptions","handler","mustAddEvent","removeEventListener","data","expression","Expression","create$4","getRealParent","SlotBinding","getTemplateScope","attr","extendParentScope","templateData","find","realParent","html","bindings","moveSlotInnerContent","slot","child","firstChild","slotBindings","TagBinding","tag","slotsToMarkup","getTag","getComponent","keepRootTag","IF","methods","fixTextExpressionsOffset","textExpressionsOffset","create$1","templateTagOffset","redundantAttribute","querySelector","bindingExpressions","TemplateChunk","container","ownerDocument","importNode","window","DOMParser","parseFromString","documentElement","createSVGTree","content","createHTMLTree","createDOMTree","createTemplateDOM","createDocumentFragment","siblings","Math","max","getTemplateTagOffset","injectDOM","bindingsData","EACH","SIMPLE","TAG","SLOT","checkType","isSvg","owner","ownerSVGElement","isTemplate","tagName","isFunction","isObject","isNil","COMPONENTS_IMPLEMENTATION_MAP","PLUGINS_SET","Set","IS_DIRECTIVE","MOUNT_METHOD_KEY","UPDATE_METHOD_KEY","UNMOUNT_METHOD_KEY","SHOULD_UPDATE_KEY","ON_BEFORE_MOUNT_KEY","ON_MOUNTED_KEY","ON_BEFORE_UPDATE_KEY","ON_UPDATED_KEY","ON_BEFORE_UNMOUNT_KEY","ON_UNMOUNTED_KEY","PROPS_KEY","STATE_KEY","SLOTS_KEY","ROOT_KEY","IS_PURE_SYMBOL","IS_COMPONENT_UPDATING","ATTRIBUTES_KEY_SYMBOL","TEMPLATE_KEY_SYMBOL","DOMattributesToObject","moveChildren","cleanNode","clearChildren","newNode","refNode","replaced","ATTRIBUTE","EVENT","TEXT","VALUE","panic","message","cause","memoize","cache","cached","val","evaluateAttributeExpressions","defineProperty","enumerable","writable","configurable","defineProperties","properties","defineDefaults","defaults","camelToDashCase","string","dashToCamelCase","toUpperCase","normalize","attrs","names","n","parseNodes","domToArray","getName"],"sourceRoot":""}